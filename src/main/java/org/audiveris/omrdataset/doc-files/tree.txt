Sources:

[defined by -- SOURCE1 SOURCE2 arguments]

.
├── DeepScores
│   ├── archive-0
│   │   ├── archive-sheet-index.csv
│   │   ├── bins
│   │   │   ├── bin-01.csv.zip
│   │   │   └── bin-NN.csv.zip
│   │   ├── classifications
│   │   │   └── SHAPE
│   │   │       └── N.png
│   │   ├── control
│   │   │   └── SHEET.controls.png
│   │   ├── features
│   │   │   └── SHEET.csv.zip
│   │   ├── filtered
│   │   │   └── SHEET.filtered.xml
│   │   ├── gray_images_png
│   │   │   └── SHEET.png
│   │   ├── mistakes
│   │   │   └── SHAPE.csv.zip
│   │   ├── omr
│   │   │   └── SHEET.omr
│   │   ├── patches
│   │   │   └── SHEET
│   │   │       └── SYMBOLID(x99y99w99z99)-SHAPE.png
│   │   ├── shapes
│   │   │   └── SHAPE.csv.zip
│   │   ├── tablatures
│   │   │   └── SHEET.tablatures.xml
│   │   └── xml_annotations
│   │       └── SHEET.xml
│   └── archive-20
└── MuseScore
    └── archive-0



Target:

// Target folder where training material is kept
//----------------------------------------------
//
[optionally superseded by option -output XXXXXX]

data/output/
├── training
│   ├── bins
│   │   ├── bin-01.csv.zip
│   │   └── bin-NN.csv.zip
│   └── patch-classifier.zip
└── verification
    └── BIN-iter-M-N
        ├── 1-COL-ARC-SH-SYMB-SHAPE.png
        ├── 2-COL-ARC-SH-SYMB-SHAPE.png
        ├── 64-COL-ARC-SH-SYMB-SHAPE.png
        └── iter-M-N.csv.zip


Command line:


Syntax:
   [OPTIONS] -- [INPUT_ANNOTATION_FILES and/or INPUT_FOLDERS]

@file:
 Content to be expanded in line

Options:
 -help                 : Display general help then stop
 -filter               : Step 1: Load and filter symbols
 -nones                : Step 2: Generate none symbols
                            (effective for control & features)
 -features             : Step 3: Generate sheet .csv.zip files
 -tally                : Step 4: Dispatch features by shape
 -grids                : Step 4.b: Build patch grids by shape
 -split                : Step 5: Split shape tally files into bins
 -shuffle              : Step 6: Shuffle each bin in memory
 -train int[]          : Step 7: Train model on selected bins
 -testPath XXX.csv.zip : Evaluate model on the provided features file
 -parallel             : (recommended) Use parallel processing
                            (effective on steps 1 to 4)
 -names                : (optional) Print all possible shape names with their index
 -histo                : (optional) Print shape histogram per sheet
 -binhisto int[]       : (optional) Print shape histogram of selected bins
 -control              : (optional) Generate control images
 -patches              : (optional) Generate patch images
 -inspect int[]        : (optional) Inspect a bin for a range of iterations
 -output <folder>      : (optional) Define output directory
                            (defaults to "data/output")
 -model <.zip file>    : (optional) Define path to model
                            (defaults to "<output>/training/patch-classifier.zip")

Input file extensions:
 .xml: annotations file
